apply plugin: 'maven-publish'
apply plugin: 'signing'

tasks.register('androidSourcesJar', Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
    }
}


artifacts {
    archives androidSourcesJar
}
group = PUBLISH_GROUP_ID
version = rootProject.ext["publish_version"]

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                tasks.named("generateMetadataFileForReleasePublication").configure { dependsOn("androidSourcesJar") }

                // The coordinates of the library, being set from variables that
                // we'll set up later
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version rootProject.ext["publish_version"]

                /// Two artifacts, the `aar` (or `jar`) and the sources
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    artifact("$buildDir/libs/${project.getName()}-${version}.jar")
                }

                // Mostly self-explanatory metadata
                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = 'Highlight different features of the app using Jetpack Compose'
                    url = 'https://github.com/canopas/Intro-showcase-view'
                    licenses {
                        license {
                            name = 'License'
                            url = 'https://github.com/canopas/Intro-showcase-view/blob/master/License'
                        }
                    }
                    developers {
                        developer {
                            id = 'cp-radhika-s'
                            name = 'Radhika canopas'
                            email = 'radhika.s@canopas.com'
                        }
                        // Add all other devs here...
                    }

                    // Version control info - if you're using GitHub, follow the
                    // format as seen here
                    scm {
                        connection = 'scm:git:github.com/canopas/Intro-showcase-view.git'
                        developerConnection = 'scm:git:ssh://github.com/canopas/Intro-showcase-view.git'
                        url = 'https://github.com/canopas/Intro-showcase-view.git'
                    }
                }
            }
        }
    }
}

// Only sign if credentials are provided
if (rootProject.ext["signing.keyId"] && rootProject.ext["signing.key"]) {
    signing {
        useInMemoryPgpKeys(
                rootProject.ext["signing.keyId"],
                rootProject.ext["signing.key"],
                rootProject.ext["signing.password"],
        )

        sign publishing.publications
    }
} else {
    println("Signing disabled - no PGP credentials found")
}